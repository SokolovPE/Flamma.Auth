syntax = "proto3";

option csharp_namespace = "Flamma.Auth";

import "Protos/common.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

package manager;

// Service that manages user account
service AccountManager {
  // Register new user
  rpc Register (RegisterRequest) returns (RegisterReply);
  // Log user in
  rpc Login (LoginRequest) returns (LoginResponse);
  // Refresh token
  rpc RefreshToken (RefreshTokenRequest) returns (LoginResponse);
  // Revoke token
  rpc RevokeToken (RevokeTokenRequest) returns (.google.protobuf.Empty);
  // Revoke all tokens
  rpc RevokeAllTokens (.google.protobuf.Empty) returns (.google.protobuf.Empty);
  // Ban user for some period
  rpc Ban (BanRequest) returns (.google.protobuf.Empty);
  // Ban user permanently
  rpc PermanentBan (UserIdRequest) returns (.google.protobuf.Empty);
  // Unban user
  rpc Unban (UserIdRequest) returns (.google.protobuf.Empty);
  // Check user ban status
  rpc IsBanned (UserIdRequest) returns (IsBannedResponse);
  // Get user
  rpc GetUserById (UserIdRequest) returns (UserInfoResponse);
  rpc GetUserByUsername (UserNameRequest) returns (UserInfoResponse);
  // Test method with auth
  rpc Test (google.protobuf.Empty) returns (TestResponse);
}

// Test response message
message TestResponse {
  string message = 1;
}

// The registration request message containing the users name.
message RegisterRequest {
  string username = 1;
  string password = 2;
  UserInfo user_info = 3;
}

// The registration response message containing operation status and message.
message RegisterReply {
  common.CommonStatus status = 1;
  string message = 2;
}

// Represents user information.
message UserInfo {
  string first_name = 1;
  string last_name = 2;
  google.protobuf.Timestamp birth_date = 3;
  // Identifier of users primary location.
  string primary_location_id = 4;
}

// The login request message.
message LoginRequest {
  string username = 1;
  string password = 2;
}

// The login response message.
message LoginResponse {
  common.CommonStatus status = 1;
  TokenInfo token_info = 2;
}

// Information about token.
message TokenInfo {
  string token = 1;
  string refresh_token = 2;
  google.protobuf.Timestamp token_valid_to = 3;
}

// Request to refresh user JWT token.
message RefreshTokenRequest {
  string token = 1;
  string refresh_token = 2;
}

// Request to revoke user token.
message RevokeTokenRequest {
  string token = 1;
}

// Request to ban user for fixed period.
message BanRequest {
  string user_id = 1;
  google.protobuf.Timestamp ban_period = 2;
}

// Response with user ban status;
message IsBannedResponse {
  bool is_banned = 1;
  google.protobuf.Timestamp banned_till = 2;
}

// Request with user id.
message UserIdRequest {
  string user_id = 1;
}

// Request with username.
message UserNameRequest {
  string username = 1;
}

// Response with user information.
message UserInfoResponse {
  string username = 1;
  google.protobuf.Timestamp registered_since = 2;
  google.protobuf.Timestamp banned_till = 3;
  bool is_banned = 4;
  UserInfo user_info = 5;
}